---
import '@src/assets/styles/main.css'

const { scene: title } = Astro.params
const { sketch: SKETCH } = Astro.props

export async function getStaticPaths() {
  const files = import.meta.glob('@src/pages/tina/_sketches/*.js', {
    eager: false,
    query: '?raw',
  })
  const paths = Object.keys(files)
  const filenames: { name: string; sketch: string }[] = []

  for (let index = 0; index < paths.length; index++) {
    const path = paths[index]
    const name = path.split('/').pop()?.replace('.js', '') ?? ''
    const sketch = ((await files[path]()) as any).default as string
    filenames.push({ name, sketch })
  }

  return filenames.map(({ name, sketch }) => ({
    params: { scene: name },
    props: { sketch },
  }))
}

const p5Scripts = ['https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js']
const includeP5Sound = SKETCH.includes('AudioIn') || SKETCH.includes('FFT')

if (includeP5Sound) {
  p5Scripts.push(
    'https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js'
  )
}
---

<!doctype html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="noindex, nofollow" />
    <title>{title}</title>
    {p5Scripts.map((script) => <script src={script} />)}
    <script src="/tina/lib.js" is:inline></script>
  </head>
  <body>
    <img
      class="absolute w-0 h-0"
      src="https://librecounter.org/counter.svg"
      loading="eager"
      decoding="async"
      referrerpolicy="unsafe-url"
      id="libre-counter"
    />
    <script is:inline set:html={SKETCH} />
  </body>
</html>

<style is:global>
  html {
    overflow: hidden;
  }
  canvas {
    margin: auto;
  }
</style>
