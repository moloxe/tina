---
import { ClientRouter } from 'astro:transitions'
import '@src/assets/styles/main.css'

type Props = {
  htmlClass?: string
  lang?: string
  scripts?: string[]
  title: string
  allowIndexing?: boolean
  allowAnalytics?: boolean
  showPaths?: boolean
  seoDescription?: string
  seoImg?: string
}

const { htmlClass, showPaths, seoDescription, seoImg } = Astro.props

const lang = Astro.props.lang || 'es'
const title = Astro.props.title
const scripts = Astro.props.scripts || []
const allowIndexing = Astro.props.allowIndexing ?? true
const allowAnalytics = Astro.props.allowAnalytics ?? true

const paths = (() => {
  const paths: { pathname: string; name: string }[] = []
  const pathname = Astro.url.pathname
    .split('/')
    .filter((p, index) => !(p === '' && index > 0))
  pathname.forEach((path, index) => {
    paths.push({
      pathname: `${paths[index - 1]?.pathname ?? '/'}${index > 1 ? '/' : ''}${path}`,
      name: index === 0 ? 'Home' : path,
    })
  })
  return paths
})()

// TODO: Turn on when domain is ready
// const canonicalHref = `https://moloxe.io${Astro.url.pathname}`
---

<!doctype html>
<html lang={lang} class={htmlClass}>
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"
    />
    <meta property="og:title" content={title} />
    <meta name="twitter:title" content={title} />
    <!-- <meta property="og:url" content={canonicalHref} /> -->
    {
      seoDescription && (
        <>
          <meta name="description" content={seoDescription} />
          <meta property="og:description" content={seoDescription} />
          <meta name="twitter:description" content={seoDescription} />
        </>
      )
    }
    {
      seoImg && (
        <>
          <meta property="og:image" content={seoImg} />
          <meta name="twitter:image" content={seoImg} />
        </>
      )
    }
    <meta name="generator" content={Astro.generator} />
    {!allowIndexing && <meta name="robots" content="noindex, nofollow" />}
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <!-- <link rel="canonical" href={canonicalHref} /> -->
    {scripts.map((src) => <script src={src} />)}
    <ClientRouter />
  </head>
  <body>
    {
      allowAnalytics && (
        <img
          class="absolute w-0 h-0"
          src="https://librecounter.org/counter.svg"
          loading="eager"
          decoding="async"
          referrerpolicy="unsafe-url"
          id="libre-counter"
        />
      )
    }

    {
      showPaths && (
        <p class="text-xs font-mono p-2 text-neutral-400 leading-5 break-all">
          {paths.map((path, index) => (
            <>
              {index > 0 && ' / '}
              <a
                href={path.pathname}
                class="hover:text-white"
              >{`${path.name}`}</a>
            </>
          ))}
        </p>
      )
    }

    <slot />
  </body>
</html>
